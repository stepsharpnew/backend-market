version: '3.8'

networks:
  dev:

services:

  database:
    image: postgres:latest
    container_name: postgres-image
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345678
      POSTGRES_DB: postgres
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - dev

  nginx:
    image: nginx:stable-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - './nginx.conf:/etc/nginx/nginx.conf'
      - '/etc/letsencrypt:/etc/letsencrypt'
    depends_on:
      - backend
      - frontend
    networks:
      - dev

  backend:
    image: backend-image
    build:
      context: ./backend
    networks:
      - dev
    environment:
      DATABASE_HOST: postgres-image
      DATABASE_USER: postgres
      DATABASE_PASSWORD: 12345678
      DATABASE_NAME: postgres
    ports:
      - "5000:5000"

  frontend:
    image: frontend-image
    build:
      context: ./frontend
    networks:
      - dev

  bot:
    image: bot-image
    build:
      context: ./tg_bot
    networks:
      - dev 

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/config:/etc/prometheus
    networks:
      - dev

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    environment:
      - GF_SERVER_ROOT_URL=http://89.232.177.97/grafana/
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    volumes:
      - ./grafana/data:/var/lib/grafana
    networks:
      - dev


volumes:
  postgres_data:
