const  {CronJob} = require('cron')
const  axios = require('axios')
require('dotenv').config()
const start = async (ctx) => {
    try {
        const userName = ctx.message.from.first_name || "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å";
        console.log(`${userName} –Ω–∞—á–∞–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞!`);
        
        // –ö—Ä–∞—Å–∏–≤–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await ctx.reply(`
‚ú® <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${userName}!</b> ‚ú®  
–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å–∫–∏–¥–∫–∏ –Ω–∞ –≤–∞—à–∏ –ª—é–±–∏–º—ã–µ —Ç–æ–≤–∞—Ä—ã.  
–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã <b>/reg</b>.  

<b>üìñ –ü—Ä–∏–º–µ—Ä:</b>  
1Ô∏è‚É£ –î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –≤ —Å–ø–∏—Å–æ–∫ –ª—é–±–∏–º—ã—Ö.  
2Ô∏è‚É£ –ü–æ–ª—É—á–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–∫–∏–¥–∫–∞—Ö, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –æ–Ω–∏ –ø–æ—è–≤—è—Ç—Å—è! üéâ  

–ù–µ —É–ø—É—Å—Ç–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–∫—É–ø–∞—Ç—å –≤—ã–≥–æ–¥–Ω–æ! üí∏  
    `, { parse_mode: "HTML" });

    } catch (error) {
        console.log(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: ${error.message}`);
        ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –ø–æ–∑–∂–µ.");
    }
};


const scene_enter = ctx => {
    ctx.scene.enter('reg')
}

let currentCtx = null; 
let bufferData = [] 
let currentData = []

const messageHandler = (ctx) => {
    currentCtx = ctx; 
    sheduler(ctx); 
};

const formatTelegramMessage = (product) => {
    return `
‚ú® *–î–æ–±–∞–≤–∏–ª–∏ —Å–∫–∏–¥–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä, –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å!* ‚ú®

üõç *${product.name}*

üí∞ *–°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞:* ~${product.price} ‚ÇΩ~  
üî• *–ù–æ–≤–∞—è —Ü–µ–Ω–∞:* ${Math.round(product.price * ((100 - product.sale) / 100))} ‚ÇΩ

–ù–µ —É–ø—É—Å—Ç–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å! üéâ
    `;
};



const bufferFunctionPrint = (current, buffer) => {
    if (current.length) {
        console.log(current.length, buffer.length);
        console.log(buffer.length > 0 ? buffer[0].id : -1);

        if (current[current.length - 1].id !== (buffer.length > 0 ? buffer[buffer.length - 1].id : -1)) {
            if (!buffer.length) {
                current.forEach((element) => {
                    console.log(element);
                    
                    currentCtx.sendPhoto(element.category.image_url, {
                        caption: formatTelegramMessage(element),
                        parse_mode: "Markdown",
                    });
                });
            } else {
                const lastProduct = current[current.length - 1];
                currentCtx.sendPhoto(lastProduct.category.image_url, {
                    caption: formatTelegramMessage(lastProduct),
                    parse_mode: "Markdown",
                });
            }
            buffer = current;
            return buffer;
        }
        return buffer;
    }
    return [];
};

 
const job = new CronJob(
    '* * * * * *', 
    async () => {
        if (currentCtx) {
            const chatId = currentCtx.update?.message?.chat.id;
            const port = process.env.PORT;
            const address = process.env.BACKEND;
            const url = process.env.URL
            const change = await axios.post(`${url}/products/telegram_sale`, {
                chatId: chatId
            });
            currentData = change.data 
            bufferData = bufferFunctionPrint(currentData, bufferData)
        } else {
            console.log('–ö–æ–Ω—Ç–µ–∫—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω');
        }
    },
    null,
    false, 
    'America/Los_Angeles' 
);

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
const sheduler = (ctx) => {
    if (ctx) {
        currentCtx = ctx; // —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
        console.log('–ö–æ–Ω—Ç–µ–∫—Å—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
        job.start(); // –∑–∞–ø—É—Å–∫–∞–µ–º CronJob
    }
};




const help = (ctx) => {
    ctx.reply(
        `
‚ú® <b>–ë–û–¢ ¬´–°–æ–∑–¥–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π¬ª</b> ‚ú®  
–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –≠—Ç–æ—Ç –±–æ—Ç —É–≤–µ–¥–æ–º–ª—è–µ—Ç –≤–∞—Å –æ —Å–∫–∏–¥–∫–∞—Ö –Ω–∞ —Ç–æ–≤–∞—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –ø–æ–º–µ—Ç–∏–ª–∏ –∫–∞–∫ –ª—é–±–∏–º—ã–µ. –ü–æ–ª—É—á–∞–π—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤–æ–≤—Ä–µ–º—è –∏ –Ω–µ —É–ø—É—Å–∫–∞–π—Ç–µ –≤—ã–≥–æ–¥–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è!  

<b>üìã –ß—Ç–æ —É–º–µ–µ—Ç –±–æ—Ç:</b>  
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å–∫–∏–¥–∫–∏ –Ω–∞ –ª—é–±–∏–º—ã–µ —Ç–æ–≤–∞—Ä—ã.  
‚Ä¢ –£–≤–µ–¥–æ–º–ª—è—Ç—å –≤–∞—Å –æ –Ω–æ–≤—ã—Ö –≤—ã–≥–æ–¥–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö.  
‚Ä¢ –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–∞—Ö —Å–æ —Å–∫–∏–¥–∫–æ–π, –≤–∫–ª—é—á–∞—è —Ü–µ–Ω—É, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ.

<b>üí° –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</b>  
1Ô∏è‚É£ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å, —É–∫–∞–∑–∞–≤ —Å–≤–æ–π <b>Email</b> (–∫–æ–º–∞–Ω–¥–∞: <code>/reg</code>).  
2Ô∏è‚É£ –î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –≤ —Å–ø–∏—Å–æ–∫ –ª—é–±–∏–º—ã—Ö.  
3Ô∏è‚É£ –ü–æ–ª—É—á–∞–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–∫–∏–¥–∫–∞—Ö –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏! üéâ  

<b>üìå –ü—Ä–∏–º–µ—Ä —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:</b>  
‚Ä¢ –¢–æ–≤–∞—Ä: <b>–°–º–∞—Ä—Ç—Ñ–æ–Ω XYZ</b>  
‚Ä¢ –°—Ç–∞—Ä–∞—è —Ü–µ–Ω–∞: ~79,999 ‚ÇΩ~  
‚Ä¢ –ù–æ–≤–∞—è —Ü–µ–Ω–∞: 59,999 ‚ÇΩ  
–ù–µ —É–ø—É—Å—Ç–∏—Ç–µ —Å–∫–∏–¥–∫—É!  

<b>üìñ –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:</b>  
‚Ä¢ <code>/reg</code> ‚Äî –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏ —É–∫–∞–∑–∞—Ç—å Email.  
‚Ä¢ <code>/help</code> ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–ø—Ä–∞–≤–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.  

<b>‚öôÔ∏è –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!</b>  
–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è:  
        `, {
        parse_mode: "HTML",
        reply_markup: {
            inline_keyboard: [
                [{ text: "–•–æ—á—É –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", callback_data: "scene_enter" }]
            ]
        }
    });
};



module.exports = {
    start,
    help,
    scene_enter,
    sheduler
}